buildscript {
    repositories {
        jcenter()
    }
}

plugins {
    id "com.github.hierynomus.license" version "0.11.0"
    id 'net.researchgate.release' version '2.1.2'
    id 'com.github.kt3k.coveralls' version '2.4.0'
}

apply plugin: 'java'
apply plugin: "jacoco"
apply plugin: 'idea'

apply from: 'libraries.gradle'
apply from: 'gradle/license.gradle'
apply from: 'gradle/release.gradle'

apply plugin: 'findbugs'
apply plugin: 'pmd'

apply plugin: 'com.github.kt3k.coveralls'

sourceCompatibility = 1.7

group = "io.jmnarloch"
archivesBaseName = "rxjava-scheduler-spring-boot-starter"

ext {
    isReleaseVersion = !version.endsWith("SNAPSHOT")
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.13'
}

jar {
    manifest {
        attributes 'Implementation-Title': 'rxjava-scheduler-spring-boot-starter',
                'Implementation-Version': version
    }
}

repositories {
    jcenter()
}

compileJava {
    options.fork = true
}

dependencies {

    compile(libraries.springBootConfigurationProcessor) {
        ext.optional = true
    }
    compile(libraries.springBootAop)
    compile(libraries.rxJava)

    testCompile(libraries.springBootTest)
    testCompile(libraries.springBootWeb)
    testCompile(libraries.junit)
    testCompile(libraries.mockito)
    testCompile(libraries.powerMockMockito)
    testCompile(libraries.powerMockJUnit)
    testCompile(libraries.powerMockRule)
    testCompile(libraries.powerMockClassloading)
}

findbugs {
    ignoreFailures = true
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}
